{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/utils/chains/ganache.ts"],"sourcesContent":["import { defineChain } from \"viem\";\r\n\r\n// Define the custom network\r\nexport const ganache = defineChain({\r\n  id: 1337,\r\n  name: \"Ganache\",\r\n  nativeCurrency: {\r\n    decimals: 18,\r\n    name: \"Ether\",\r\n    symbol: \"ETH\",\r\n  },\r\n  rpcUrls: {\r\n    default: {\r\n      http: [\"http://127.0.0.1:7545\"],\r\n      webSocket: [\"ws://127.0.0.1:7545\"],\r\n    },\r\n  },\r\n  contracts: {\r\n    EasyMilestones: {\r\n      address: \"0xd70267B3aFFC56ffEc88efFc699Ad151B8c1f63d\",\r\n      blockCreated: 2,\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,UAAU,CAAA,GAAA,6TAAA,CAAA,cAAW,AAAD,EAAE;IACjC,IAAI;IACJ,MAAM;IACN,gBAAgB;QACd,UAAU;QACV,MAAM;QACN,QAAQ;IACV;IACA,SAAS;QACP,SAAS;YACP,MAAM;gBAAC;aAAwB;YAC/B,WAAW;gBAAC;aAAsB;QACpC;IACF;IACA,WAAW;QACT,gBAAgB;YACd,SAAS;YACT,cAAc;QAChB;IACF;AACF"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/_context/index.tsx"],"sourcesContent":["'use client'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { type ReactNode } from 'react'\r\nimport { cookieToInitialState, createConfig, http, WagmiProvider } from 'wagmi'\r\nimport { sepolia } from 'wagmi/chains'\r\nimport { ganache } from '../utils/chains/ganache'\r\n\r\nexport const config = createConfig({\r\n  chains: [ganache, sepolia],\r\n  ssr: true,\r\n  transports: {\r\n    [ganache.id]: http(),\r\n    [sepolia.id]: http(),\r\n  },\r\n})\r\n\r\n// augment module interface\r\ndeclare module \"wagmi\" {\r\n  interface Register {\r\n    config: typeof config;\r\n  }\r\n}\r\n\r\n// Set up queryClient\r\nconst queryClient = new QueryClient()\r\n\r\nfunction WagmiContextProvider({ children, cookies }: { children: ReactNode; cookies: string | null }) {\r\n  const initialState = cookieToInitialState(config, cookies)\r\n\r\n  return (\r\n    <WagmiProvider config={config} initialState={initialState}>\r\n      <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n    </WagmiProvider>\r\n  )\r\n}\r\n\r\nexport default WagmiContextProvider"],"names":[],"mappings":";;;;;AAKA;AAFA;AACA;AADA;AAFA;AAEA;AAAA;AAFA;AADA;;;;;;AAOO,MAAM,SAAS,CAAA,GAAA,iXAAA,CAAA,eAAY,AAAD,EAAE;IACjC,QAAQ;QAAC,iIAAA,CAAA,UAAO;QAAE,gUAAA,CAAA,UAAO;KAAC;IAC1B,KAAK;IACL,YAAY;QACV,CAAC,iIAAA,CAAA,UAAO,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,6TAAA,CAAA,OAAI,AAAD;QACjB,CAAC,gUAAA,CAAA,UAAO,CAAC,EAAE,CAAC,EAAE,CAAA,GAAA,6TAAA,CAAA,OAAI,AAAD;IACnB;AACF;AASA,qBAAqB;AACrB,MAAM,cAAc,IAAI,uPAAA,CAAA,cAAW;AAEnC,SAAS,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAmD;IAClG,MAAM,eAAe,CAAA,GAAA,oXAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ;IAElD,qBACE,gcAAC,iWAAA,CAAA,gBAAa;QAAC,QAAQ;QAAQ,cAAc;kBAC3C,cAAA,gcAAC,oTAAA,CAAA,sBAAmB;YAAC,QAAQ;sBAAc;;;;;;;;;;;AAGjD;uCAEe"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}